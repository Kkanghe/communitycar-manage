<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
  
    <!-- 
     spring的启动，本质上就是创建一个上下文容器，容器中存放了大量可以被复用的JAVA类的实例。 有两种方法来决定哪些类的实例能够放入容器。
     1. 注解方式声明，扫描后创建复用实例
     2. 直接声明bean
    -->
   <context:component-scan base-package="edu.mju.xiaoqu.service,edu.mju.xiaoqu.dao"></context:component-scan> 		
    
   <!--1 引入属性文件，在配置中占位使用 -->
   <context:property-placeholder location="classpath:db/db.properties" />
   
   <!--2 配置C3P0数据源 -->
   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!--驱动类名 -->
        <property name="driverClass" value="${mysql.driver}" />
        <!-- url -->
        <property name="jdbcUrl" value="${mysql.url}" />
        <!-- 用户名 -->
        <property name="user" value="${mysql.username}" />
        <!-- 密码 -->
        <property name="password" value="${mysql.password}" />
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数  -->
        <property name="acquireIncrement" value="5"></property>
        <!-- 初始连接池大小 -->
        <property name="initialPoolSize" value="10"></property>
        <!-- 连接池中连接最小个数 -->
        <property name="minPoolSize" value="5"></property>
        <!-- 连接池中连接最大个数 -->
        <property name="maxPoolSize" value="20"></property>
    </bean>
    
    <!--3 sessionFatory的配置-->
    <!-- 只要你启动spring,创建上下文容器，那么sqlSessionFatory的实例就创建了 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource" />
       <property name="typeAliasesPackage" value="edu.mju.xiaoqu.domain"/>
       <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
       </property>
       <!-- sql映射文件路径 -->
       <property name="mapperLocations"
                  value="classpath*:mapper/*Mapper.xml"></property>        
    </bean>
    
    <!-- 自动扫描接口类，如果发现接口的名字和和某个mapper的namespace一致，那么就指导生成这个接口的实现，然后注入spring容器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="edu.mju.xiaoqu.dao"></property>
    </bean>      
          
</beans>
